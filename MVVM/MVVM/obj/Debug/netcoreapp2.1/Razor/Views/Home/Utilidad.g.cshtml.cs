#pragma checksum "C:\Users\erroa\Downloads\MVVM\MVVM\Views\Home\Utilidad.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0cb5edc62d7ec46e3dcf70e4f2e833b16e480524"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Utilidad), @"mvc.1.0.view", @"/Views/Home/Utilidad.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Utilidad.cshtml", typeof(AspNetCore.Views_Home_Utilidad))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\erroa\Downloads\MVVM\MVVM\Views\_ViewImports.cshtml"
using MVVM;

#line default
#line hidden
#line 2 "C:\Users\erroa\Downloads\MVVM\MVVM\Views\_ViewImports.cshtml"
using MVVM.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0cb5edc62d7ec46e3dcf70e4f2e833b16e480524", @"/Views/Home/Utilidad.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6dcf055ce8bbaa1d887e5746cbe64bc89934e9d2", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Utilidad : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/banner2.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("banner"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("img-responsive center-block"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/que-es.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("center-block img-responsive"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/relay.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/relayhtm.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/asincrono.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/asincronohtm.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("imagen"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\erroa\Downloads\MVVM\MVVM\Views\Home\Utilidad.cshtml"
  
    ViewData["Title"] = "Area y utilidad";


#line default
#line hidden
            BeginContext(55, 42, true);
            WriteLiteral("\r\n<nav style=\"padding: 40px;\">\r\n    <br />");
            EndContext();
            BeginContext(97, 83, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "4b44d1bc67be4077a195387b07889816", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(180, 559, true);
            WriteLiteral(@"<br />
    <h1>Patrones MVVM</h1>
    <p class=""text-justify"">
        Cuando estamos creando una aplicación, a todos nos gustaría tener nuestro código limpio y organizado,
        para que cualquier otro desarrollador tenga una más rápida comprensión del mismo.
        Es aquí en donde entran en juego los patrones de diseño. ¿Pero exactamente por qué lo usamos?
        Los patrones de diseño nos ofrecen una arquitectura y un conjunto de reglas/principios
        definidos previamente que deben de ser cumplidos en nuestra App
    </p><br/>
    ");
            EndContext();
            BeginContext(739, 69, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "de1cae06c6844b558177d26f3e28b320", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(808, 1575, true);
            WriteLiteral(@"<br />
    <p class=""text-justify"">Enumeramos algunas caracteristics mas importantes que se obtinen al usar patrones de diseño:</p>
    <ul class=""text-justify"">
        <li>Código más limpio y organizado.</li>
        <li>Mayor claridad y mejor comprensión del proyecto frente a otros desarrolladores.</li>
        <li>Reutilización de código</li>
        <li>Mantenimiento más rápido</li>
    </ul>
    <p class=""text-justify"">Hablaremos sobre los 3 patrones con los cuales cuenta MVVM.</p><br />
    <h2>RelayCommand y RelayCommand</h2>
    <p class=""text-justify"">
        RelayCommand y RelayCommand<T>
        son implementaciones que pueden exponer un método o delegar en la vista.
        Estos tipos actúan como una forma de enlazar comandos entre los elementos viewmodel y UI.ICommand
    </p><br />
    <h3>Cómo funcionan</h3>
    <p class=""text-justify""> RelayCommand y tiene las siguientes características principales:RelayCommand<T></p>
    <ul class=""text-justify"">
        <li>Proporcionan ");
            WriteLiteral(@"una implementación base de la interfaz.ICommand</li>
        <li>También implementan la interfaz IRelayCommand (e IRelayCommand<T>),que expone un método para generar el evento.NotifyCanExecuteChangedCanExecuteChanged</li>
        <li>Exponen constructores que toman delegados como y , que permiten el empaquetado de métodos estándar y expresiones lambda.ActionFunc<T></li>
    </ul><br />
    <h3>Trabajar con ICommand</h3>
    <p class=""text-justify"">
        A continuación se muestra cómo configurar un comando simple: <br /> <br />
        ");
            EndContext();
            BeginContext(2383, 68, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "6bd14ae8264e4757a0d9d8b397ab940e", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2451, 98, true);
            WriteLiteral("<br /><br />\r\n        Y la interfaz de usuario relativa podría ser entonces.<br /><br />\r\n        ");
            EndContext();
            BeginContext(2549, 71, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "bff75e469ce54d19bc5b9ba848912b5e", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2620, 2764, true);
            WriteLiteral(@"
    </p><br />
    <p class=""text-justify"">
        Se enlaza al en el modelo de vista, que ajusta el método privado.
        Muestra el valor de la propiedad y se actualiza cada vez que cambia el valor de la propiedad.ButtonICommandIncrementCounterTextBlockCounter
    </p><br />
    <h3>Ejemplos</h3>
    <p class=""text-justify"">
        Consulte  de <a href=""https://github.com/CommunityToolkit/MVVM-Samples"" target=""_blank"" />la aplicación</a>
        (para varios marcos de interfaz de usuario) para ver el kit de herramientas de MVVM en acción.<br />
        También puede encontrar más ejemplos en las
        <a href=""https://github.com/CommunityToolkit/WindowsCommunityToolkit/tree/rel/7.1.0/UnitTests/UnitTests.Shared/Mvvm"" target=""_blank"">pruebas unitarias</a>.
    </p> <br />
    <h2>AsyncRelayCommand y AsyncRelayCommand<T></h2>
    <p class=""text-justify"">
        AsyncRelayCommand y AsyncRelayCommand<T> son implementaciones que amplían las funcionalidades ofrecidas por RelayCommand,con sop");
            WriteLiteral(@"orte para operaciones asincrónicas.ICommand
    </p> <br />
    <h3>Cómo funcionan</h3>
    <p class=""text-justify"">
        AsyncRelayCommand y tienen las siguientes características principales:AsyncRelayCommand<T>
    </p>
    <ul class=""text-justify"">
        <li>Amplían las funcionalidades de los comandos sincrónicos incluidos en la biblioteca, con soporte para delegados -returning.Task</li>
        <li>
            Pueden envolver funciones asincrónicas con un parámetro adicional para admitir la cancelación, y exponen a y propiedades,
            así como un método.CancellationTokenCanBeCanceledIsCancellationRequestedCancel.
        </li>
        <li>
            Exponen una propiedad que se puede usar para supervisar el progreso de una operación pendiente y una que se puede usar
            para comprobar cuándo se completa una operación. Esto es particularmente útil para enlazar un comando a elementos de la interfaz de usuario,
            como los indicadores de carga.ExecutionTaskIsRun");
            WriteLiteral(@"ning.
        </li>
        <li>
            Implementan las interfaces IAsyncRelayCommand e IAsyncRelayCommand<T>
                , lo que significa que viewmodel puede exponer
                fácilmente comandos usando estos para reducir el acoplamiento estrecho entre tipos. Por ejemplo, esto hace que sea más fácil reemplazar
                un comando con una implementación personalizada que exponga la misma superficie de API pública, si es necesario.
        </li>
    </ul> <br />
    <h3>Trabajar con comandos asincrónicos</h3>
    <p class=""text-justify"">Imaginemos un escenario similar al descrito en el ejemplo, pero un comando ejecutando una operación asincrónica:RelayCommand</p>
    <br />");
            EndContext();
            BeginContext(5384, 72, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "986727b4ca4548ea9dfe76748b626c02", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5456, 103, true);
            WriteLiteral(" <br />\r\n    <p class=\"text-justify\">Con el código de interfaz de usuario relacionado:</p> <br />\r\n    ");
            EndContext();
            BeginContext(5559, 87, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "b21776e1f16540b68d7868911239e200", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5646, 1141, true);
            WriteLiteral(@" <br />
    <p class=""text-justify"">
        Al hacer clic en el , se invoca el comando y se actualiza.
        Cuando se completa la operación, la propiedad genera una notificación que se refleja en la interfaz de usuario.
        En este caso, se muestran tanto el estado de la tarea como el resultado actual de la tarea.
        Tenga en cuenta que para mostrar el resultado de la tarea, es necesario utilizar el método:
        esto proporciona acceso al resultado de una tarea que aún no se ha completado sin bloquear el subproceso
        (y posiblemente causando un interbloqueo).ButtonExecutionTaskTaskExtensions.GetResultOrDefault
    </p> <br />
    <h3>Ejemplos</h3>
    <p class=""text-justify"">
        Consulte la <a href=""https://github.com/CommunityToolkit/MVVM-Samples"">aplicacion de ejemplo</a>(para varios marcos de interfaz de usuario) para ver el kit de herramientas de MVVM en acción..<br />
        También puede encontrar más ejemplos en las <a href=""https://github.com/CommunityToolkit/Wi");
            WriteLiteral("ndowsCommunityToolkit/tree/rel/7.1.0/UnitTests/UnitTests.Shared/Mvvm\">pruebas unitarias</a>\r\n    </p>\r\n</nav>\r\n\r\n\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
